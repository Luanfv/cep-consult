{"code":"!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var o in e)t.d(r,o,function(t){return e[t]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=3)}([function(){throw new Error(\"Module parse failed: Unexpected token (23:53)\\nYou may need an appropriate loader to handle this file type.\\n|     return {\\n|       ...props,\\n>       refreshControl: props.refreshControl == null ? <RefreshControl refreshing={props.refreshing} onRefresh={onRefresh} progressViewOffset={props.progressViewOffset} /> : props.refreshControl\\n|     };\\n|   } else {\")},function(e,t,n){\"use strict\";n.r(t),t.default=function(){throw new Error(\"This version of '@react-navigation/native' is not compatible with React Navigation 5. Make sure you install 5.x version of '@react-navigation/native'.\")}},function(e,t,n){e.exports={get createAppContainer(){return n(4).default},get createKeyboardAwareNavigator(){return n(5).default},get createNavigationAwareScrollable(){return n(6).default},get withOrientation(){return n(7).default},get ResourceSavingSceneView(){return n(8).default},get SafeAreaView(){return n(9).default},get ScrollView(){return n(0).ScrollView},get FlatList(){return n(0).FlatList},get SectionList(){return n(0).SectionList},get Themed(){return n(10).default},get createNavigationFactory(){return n(1).default},get NavigationContainer(){return n(1).default}}},function(e,t,n){\"use strict\";n.r(t);var r=n(2);n.n(r);console.log({NavigationContainer:r.NavigationContainer})},function(){throw new Error(\"Module parse failed: Unexpected token (64:9)\\nYou may need an appropriate loader to handle this file type.\\n| export default function createNavigationContainer(Component) {\\n|   class NavigationContainer extends React.Component {\\n>     subs = null;\\n| \\n|     static router = Component.router;\")},function(){throw new Error(\"Module parse failed: Unexpected token (5:16)\\nYou may need an appropriate loader to handle this file type.\\n| \\n| export default ((Navigator, navigatorConfig) => class KeyboardAwareNavigator extends React.Component {\\n>   static router = Navigator.router;\\n|   static navigationOptions = Navigator.navigationOptions;\\n|   _previouslyFocusedTextInput = null;\")},function(){throw new Error(\"Module parse failed: Unexpected token (7:23)\\nYou may need an appropriate loader to handle this file type.\\n| export default function createNavigationAwareScrollable(Component) {\\n|   const ComponentWithNavigationScrolling = withNavigation(class extends React.PureComponent {\\n>     static displayName = `withNavigationScrolling(${Component.displayName || Component.name})`;\\n| \\n|     componentDidMount() {\")},function(){throw new Error(\"Module parse failed: Unexpected token (24:28)\\nYou may need an appropriate loader to handle this file type.\\n|     }\\n| \\n>     handleOrientationChange = ({ window }) => {\\n|       const isLandscape = isOrientationLandscape(window);\\n|       this.setState({ isLandscape });\")},function(){throw new Error(\"Module parse failed: Unexpected token (33:11)\\nYou may need an appropriate loader to handle this file type.\\n|     } = this.props;\\n| \\n>     return <View style={styles.container} collapsable={false} removeClippedSubviews={Platform.OS === 'android' ? removeClippedSubviews : !isFocused && removeClippedSubviews}>\\n|         <View style={this._mustAlwaysBeVisible() || isFocused ? styles.innerAttached : styles.innerDetached}>\\n|           {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\")},function(){throw new Error(\"Module parse failed: Unexpected token (124:28)\\nYou may need an appropriate loader to handle this file type.\\n| \\n| class SafeView extends Component {\\n>   static setStatusBarHeight = height => {\\n|     _customStatusBarHeight = height;\\n|   };\")},function(){throw new Error(\"Module parse failed: Unexpected token (6:21)\\nYou may need an appropriate loader to handle this file type.\\n| \\n| class ThemedText extends React.Component {\\n>   static contextType = ThemeContext;\\n| \\n|   render() {\")}]);","extractedComments":[]}